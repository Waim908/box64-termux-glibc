name: (Stable) Build and Release Box64

on:
  workflow_dispatch:

jobs:
  ubuntu:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Download termux glibc and mkdir
        run: |
          useCore=$(nproc)
          wget -O /tmp/glibc.tar.xz https://github.com/Waim908/box64-termux-glibc/releases/download/nodownload/Lite-glibc-2.41-1.tar.xz
          sudo mkdir /data
          sudo chmod 777 /data
          mkdir /data/data
          mkdir /data/data/com.termux/
          mkdir /data/data/com.termux/files/
          mkdir /data/data/com.termux/files/usr
          mkdir /data/data/com.termux/files/usr/glibc
          tar -xvf /tmp/glibc.tar.xz -C /data/data/com.termux/files/usr/
      
      - name: get latest box64 stable source Download and sed
        id: tag
        run: |
          export version=$(curl --request GET --url "https://api.github.com/repos/ptitSeb/box64/releases/latest" --header "Accept: application/vnd.github+json" | grep "tag_name" | sed 's/.*"tag_name": "\(.*\)",/\1/')
          echo "box64Ver=$version" >> $GITHUB_OUTPUT
          cd /tmp
          wget -O https://github.com/ptitSeb/box64/archive/refs/tags/${version}.tar.gz
          tar xf box64*.tar.xz
          cd box64*
          sed -i 's/\/usr/\/data\/data\/com.termux\/files\/usr\/glibc/g' CMakeLists.txt
          sed -i 's/\/etc/\/data\/data\/com.termux\/files\/usr\/glibc\/etc/g' CMakeLists.txt
          mkdir build
          cd build

      - name: Set glibc and Build
        run: |
          sudo apt autoremove cmake make -y
          export oldPath="$PATH"
          export PATH=/data/data/com.termux/files/usr/glibc/bin:$PATH
          export LD_LIBRARY_PATH=/data/data/com.termux/files/usr/glibc/lib:/usr/lib
          /data/data/com.termux/files/usr/glibc/bin/bash
          if ! /data/data/com.termux/files/usr/glibc/bin/cmake --version; then
              echo "glibc cmake test faild!"
              exit 1
          fi
          mkdir /tmp/glibc
          cd /tmp/box64*/
          if ! cmake .. -DCMAKE_INSTALL_PREFIX=/tmp/glibc -DARM64=ON -DARM_DYNAREC=ON -DBAD_SIGNAL=ON -DNOLOADADDR=ON -DCMAKE_BUILD_TYPE=Release; then
            echo "cmake failed"
            exit 1
          else
            if ! make -j$(nproc); then
              echo "make faild"
              exit 1
            else
              make install
            fi
          fi
      # - name: Checkout
      #   uses: actions/checkout@v5
      - name:  Test and get Box64 version
        id: testTag
        run: |
          cd /tmp/
          if ! /tmp/glibc/bin/box64 --version; then
            echo "test faild"
          else
            version=$(/tmp/glibc/bin/box64 --version | awk '{print $3"_"$4}')
            echo "box64Ver=${version}" >> $GITHUB_OUTPUT
          fi
          exit
          export PATH="$oldPath"
          unset LD_LIBRARY_PATH
          tar -I "xz -T$(nproc)" -cvf /tmp/box64-glibc.tar.xz glibc/
      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.tag.outputs.box64Ver }}-stable
          draft: false
          prerelease: false
          tag_name: ${{ steps.tag.outputs.box64Ver }}-stable
          body: ${{ steps.testTag.outputs.box64Ver }}
          files: |
            /tmp/box64-glibc.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}